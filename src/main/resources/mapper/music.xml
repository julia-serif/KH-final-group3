<?xml version="1.0" encoding="UTF-8"?>

<!-- DTD(Document Type Definition)
	 - 작성한 문서가 어떤문서인지에 대해서 정의하는 것 
	 - 하나의 시스템 내에서 사용할 XML 데엍의 구조를 정의하여 유효성을 점검시 사용함 -->

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="MusicDAO">	
	
	<select id="searchSong" parameterType="PageDTO" resultType="MusicDTO">
		<![CDATA[
			select * from
				(select m.*, row_number()
					over(order by m_no desc) rnum from music m
					where m_name like '%' || #{keyword} || '%')
					where rnum >= #{startNo} and rnum <= #{endNo}
		]]>
	</select>
	
	<select id="searchAlbum" parameterType="PageDTO" resultType="MusicDTO">
		<![CDATA[
			select distinct m_album, m_artist, m_image from
				(select m.*, row_number()
					over(order by m_no desc) rnum from music m
					where m_album like '%' || #{keyword} || '%')
					where rnum >= #{startNo} and rnum <= #{endNo}
		]]>
	</select>
	
	<select id="searchArtist" parameterType="PageDTO" resultType="MusicDTO">
		<![CDATA[
			select distinct m_artist from
				(select m.*, row_number()
					over(order by m_no desc) rnum from music m
					where m_artist like '%' || #{keyword} || '%')
					where rnum >= #{startNo} and rnum <= #{endNo}
		]]>
	</select>

	<select id="musicCont" parameterType="int" resultType="MusicDTO">
		select * from music where m_no = #{m_no}
	</select>
	
	<select id="count" resultType="int" parameterType="int">
		select count(*) from m_reply where m_no = #{no}
	</select>
	
	<select id="musicReplyList" parameterType="PageDTO" resultType="MusicReplyDTO">
		<![CDATA[
		select * from 
			(select m.*, row_number() 
				over(order by mr_no desc) rnum from m_reply m
				where m_no = #{no})
				where rnum >= #{startNo} and rnum <= #{endNo}
		]]>
	</select>
	
	<insert id="music_reply" parameterType="MusicReplyDTO">
      <selectKey resultType="int" keyProperty="mr_no" order="BEFORE">
         select max(mr_no) from m_reply
      </selectKey>
			insert into m_reply values(#{m_no}, #{mr_no} + 1, #{mr_cont},
			 #{mr_writer}, sysdate, '', #{mr_no} + 1, default)
	</insert>

	<update id="likeUp" parameterType="int">
		update music set m_like = m_like + 1 where m_no = #{m_no}
	</update>
	
	<delete id="musicReplyDel" parameterType="int">
		delete from m_reply where mr_no = #{mr_no}
	</delete>
	
	<select id="searchVideo" parameterType="PageDTO" resultType="MusicDTO">
		<![CDATA[
			select * from
				(select m.*, row_number()
					over(order by m_no desc) rnum from music m
					where m_name like '%' || #{keyword} || '%' and
					m_mv is not null)
					where rnum >= #{startNo} and rnum <= #{endNo}
		]]>
	</select>

	
	<select id="searchLyrics" parameterType="PageDTO" resultType="MusicDTO">
		<![CDATA[
			select * from
				(select m.*, row_number()
					over(order by m_no desc) rnum from music m
					where m_lyrics like '%' || #{keyword} || '%' or
					m_name like '%' || #{keyword} || '%')
					where rnum >= #{startNo} and rnum <= #{endNo}
		]]>
	</select>
   
	<select id="countAll" resultType="int">
		select count(*) from music
			where m_name like '%' || #{keyword} || '%' or
				m_album like '%' || #{keyword} || '%' or
				m_artist like '%' || #{keyword} || '%'
	</select>
	
	<select id="countSong" resultType="int">
		select count(*) from music
			where m_name like '%' || #{keyword} || '%'
	</select>
	
	<select id="countAlbum" resultType="int">
		select count(*) from
			(select distinct m_album from music 
			where m_album like '%' || #{keyword} || '%')
	</select>
	
	<select id="countArtist" resultType="int">
		select count(distinct m_artist) from music
			where m_artist like '%' || #{keyword} || '%'
	</select>
	

	<select id="countVideo" resultType="int">
		select count(*) from music
			where m_name like '%' || #{keyword} || '%' and
			m_mv is not null
	</select>
	
	<select id="countLyrics" resultType="int">
		select count(*) from music
			where m_lyrics like '%' || #{keyword} || '%' or
			m_name like '%' || #{keyword} || '%'
	</select>
	
	
	
	<select id="newAll" resultType="MusicDTO">
		select * from music order by m_no desc
	</select>
	
	<select id="top10" resultType="MusicDTO">
	<![CDATA[
		select * from (select * from music order by m_pcount desc) where rownum <= 10
	]]>
	</select>
	
	<select id="MusicCont" resultType="int">
		select count(*) from music
	</select>
	
	<select id="MusicList" parameterType="PageDTO" resultType="MusicDTO" >
    		<![CDATA[
			select * from
				(select b.*, row_number() 
					over(order by m_no desc) rnum from music b)
					where rnum >= #{startNo} and rnum <= #{endNo}
	    ]]>
    	</select>
	
	<select id="selectM_no" resultType="int">
    		select max(m_no) from music
    	</select>
	
	<insert id="addMusic" parameterType="MusicDTO">
    		insert into music values(#{m_no},#{m_name}, #{m_cont}, #{m_album}, #{m_artist},'',#{m_audio},#{m_mv},#{m_image},
    			'',#{m_ptime},#{m_lyrics}, sysdate,'')
    	
    	</insert>
    	
    	<delete id="deleteMusic" parameterType="int" >
    		delete from music where m_no = #{m_no}
    	</delete>
	
</mapper>
