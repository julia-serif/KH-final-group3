<?xml version="1.0" encoding="UTF-8"?>

<!-- DTD(Document Type Definition)
	 - 작성한 문서가 어떤문서인지에 대해서 정의하는 것 
	 - 하나의 시스템 내에서 사용할 XML 데엍의 구조를 정의하여 유효성을 점검시 사용함 -->

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="MusicDAO">

	<select id="searchAll" parameterType="PageDTO" resultType="MusicDTO">
		<![CDATA[
			select * from
				(select m.*, row_number()
					over(order by m_no desc) rnum from music m
					where m_name like '%' || #{keyword} || '%' or
						m_album like '%' || #{keyword} || '%' or
						m_artist like '%' || #{keyword} || '%')
					where rnum >= #{startNo} and rnum <= #{endNo}
		]]>
	</select>
	
	<select id="searchSong" parameterType="PageDTO" resultType="MusicDTO">
		<![CDATA[
			select * from
				(select m.*, row_number()
					over(order by m_no desc) rnum from music m
					where m_name like '%' || #{keyword} || '%')
					where rnum >= #{startNo} and rnum <= #{endNo}
		]]>
	</select>
	
	<select id="searchAlbum" parameterType="PageDTO" resultType="MusicDTO">
		<![CDATA[
			select * from
				(select m.*, row_number()
					over(order by m_no desc) rnum from music m
					where m_album like '%' || #{keyword} || '%')
					where rnum >= #{startNo} and rnum <= #{endNo}
		]]>
	</select>
	
	<select id="searchArtist" parameterType="PageDTO" resultType="MusicDTO">
		<![CDATA[
			select * from
				(select m.*, row_number()
					over(order by m_no desc) rnum from music m
					where m_artist like '%' || #{keyword} || '%')
					where rnum >= #{startNo} and rnum <= #{endNo}
		]]>
	</select>

	<select id="musicCont" parameterType="int" resultType="MusicDTO">
		select * from final.music where m_no = #{m_no}
	</select>
	
	<insert id="music_reply" parameterType="MusicReplyDTO">
		<selectKey resultType="int" keyProperty="mr_no" order="BEFORE">
			select max(mr_no) m_reply
		</selectKey>
		insert into m_reply values(#{m_no} + 1, #{mr_writer}, 
		#{mr_cont}, sysdate, default, default)
	</insert>
	
	<select id="searchPlaylist"></select>

	<select id="searchVideo">
		<![CDATA[
			select * from
				(select m.*, row_number()
					over(order by m_no desc) rnum from music m
					where m_name like '%' || #{keyword} || '%')
					where rnum >= #{startNo} and rnum <= #{endNo}
		]]>
	</select>

	
	<select id="searchLyrics" parameterType="PageDTO" resultType="MusicDTO">
		<![CDATA[
			select * from
				(select m.*, row_number()
					over(order by m_no desc) rnum from music m
					where m_lyrics like '%' || #{keyword} || '%')
					where rnum >= #{startNo} and rnum <= #{endNo}
		]]>
	</select>
   
	<select id="countAll" resultType="int">
		select count(*) from final.music
			where m_name like '%' || #{keyword} || '%' or
				m_album like '%' || #{keyword} || '%' or
				m_artist like '%' || #{keyword} || '%'
	</select>
	
	<select id="countSong" resultType="int">
		select count(*) from final.music
			where m_name like '%' || #{keyword} || '%'
	</select>
	
	<select id="countAlbum" resultType="int">
		select count(*) from final.music
			where m_album like '%' || #{keyword} || '%'
	</select>
	
	<select id="countArtist" resultType="int">
		select count(*) from final.music
			where m_artist like '%' || #{keyword} || '%'
	</select>
	
	<select id="countVideo">
		select count(*) from final.music
			where m_name like '%' || #{keyword} || '%'
	</select>
	
	<select id="countLyrics" resultType="int">
		select count(*) from final.music
			where m_lyrics like '%' || #{keyword} || '%'
	</select>
	
	<select id="newAll" resultType="MusicDTO">
		select * from final.music order by m_no desc
	</select>
	
	<select id="top10" resultType="MusicDTO">
	<![CDATA[
		select * from (select * from final.music order by m_pcount desc) where rownum <= 10
	]]>
	</select>
	
</mapper>
